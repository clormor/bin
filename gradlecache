#!/bin/bash -e

# Set of tools to manage gradle the local gradle cache.


GRADLE_HOME=~/.gradle
BACKUP_LOC=$GRADLE_HOME
BACKUP_PREFIX="-backup-"
LIST_DATE_FORMAT="%d %b %Y %H:%M"


function show_help {
    echo "Usage: $(basename $0) [-b|-r|-l|-h]" >&2
    echo -e "\t-b: Backup gradle cache" >&2
    echo -e "\t-r: Restore gradle cache from backup" >&2
    echo -e "\t-l: List backups" >&2
    echo -e "\t-h: Print help" >&2
}

function abort {
    echo "$1"
    exit 1
}

function list_backups {
    for backup in $(find $BACKUP_LOC -maxdepth 1 -type d -name "*$BACKUP_PREFIX*" -exec basename {} \; | cut -f 3 -d '-' | sort | uniq)
    do
        date_string=$(date -r $backup +"$LIST_DATE_FORMAT")
        echo "$backup ($date_string)"
    done
}

# Backup specific directory in gradle cache location.
#
# $1: absolute path to directory to be backed up
# $2: backup timestamp
function backup_dir {
    if [ -d $1 ]
    then
        mv -v $1 ${BACKUP_LOC}/$(basename $1)${BACKUP_PREFIX}$2
    else
        abort "No directory found at $1. Is this a fresh gradle home?"
    fi
}

# Restore specific directory in gradle cache location.
#
# $1: absolute path to the directory being restored to
# $2: backup timestamp to restore from
function restore_dir {
    if [ -d ${BACKUP_LOC}/$(basename $1)${BACKUP_PREFIX}$2 ]
    then
        mv -v ${BACKUP_LOC}/$(basename $1)${BACKUP_PREFIX}$2 $1
    else
        abort "No backup found with timestamp $2. Use -l to list available backups"
    fi
}

function validate_timestamp {
    if [[ ! $1 =~ ^[0-9]{10}$ ]]
    then
        abort "$1 is not a valid timestamp"
    fi
}

function backup {
    backup_timestamp=$(date +"%s")

    if [ -d ${GRADLE_HOME} ]
    then
        echo "Backing up existing ${GRADLE_HOME} using timestamp $backup_timestamp..."
        backup_dir ${GRADLE_HOME}/caches $backup_timestamp
        backup_dir ${GRADLE_HOME}/daemon $backup_timestamp
        backup_dir ${GRADLE_HOME}/native $backup_timestamp
        backup_dir ${GRADLE_HOME}/wrapper $backup_timestamp
    else
        abort "No gradle home found at ${GRADLE_HOME}"
    fi
}

function restore {
    validate_timestamp $1
    restore_timestamp=$1

    if [ -d ${GRADLE_HOME} ]
    then
        echo "Restoring ${GRADLE_HOME} using timestamp $restore_timestamp..."
        restore_dir ${GRADLE_HOME}/caches $restore_timestamp
        restore_dir ${GRADLE_HOME}/daemon $restore_timestamp
        restore_dir ${GRADLE_HOME}/native $restore_timestamp
        restore_dir ${GRADLE_HOME}/wrapper $restore_timestamp
    else
        abort "No gradle home found at ${GRADLE_HOME}"
    fi
}

while [[ "$1" =~ ^- && ! "$1" == "--" ]]; do case $1 in
  -b | --backup )
    backup
    exit
    ;;
  -r | --restore )
    shift
    restore $1
    ;;
  -l | --list )
    list_backups
    ;;
  -h | --help )
    show_help
    ;;
  * )
    show_help
    ;;
esac; shift; done
if [[ "$1" == '--' ]]; then shift; fi

